/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ReverseRegistrar,
  ReverseRegistrarInterface,
} from "../ReverseRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FNS",
        name: "_fns",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract NameResolver",
        name: "resolver",
        type: "address",
      },
    ],
    name: "DefaultResolverChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ReverseClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimForAddr",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolver",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultResolver",
    outputs: [
      {
        internalType: "contract NameResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fns",
    outputs: [
      {
        internalType: "contract FNS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setDefaultResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNameForAddr",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001891380380620018918339818101604052810190620000379190620001dc565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b6000620001a48262000183565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f46200015e565b5b60006200020584828501620001c5565b91505092915050565b60805161165962000238600039600081816103d00152818161055d015261070d01526116596000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b382e4c51161008c578063c66485b211610066578063c66485b214610273578063da8c229e1461028f578063e0dba60f146102bf578063f2fde38b146102db576100ea565b8063b382e4c5146101f5578063bffbe61c14610213578063c47f002714610243576100ea565b8063715018a6116100c8578063715018a61461017f5780637a806d6b14610189578063828eab0e146101b95780638da5cb5b146101d7576100ea565b80630f5a5466146100ef5780631e83409a1461011f578063656696311461014f575b600080fd5b61010960048036038101906101049190610d08565b6102f7565b6040516101169190610d61565b60405180910390f35b61013960048036038101906101349190610d7c565b61030c565b6040516101469190610d61565b60405180910390f35b61016960048036038101906101649190610da9565b610342565b6040516101769190610d61565b60405180910390f35b61018761061f565b005b6101a3600480360381019061019e9190610f42565b610633565b6040516101b09190610d61565b60405180910390f35b6101c16106bc565b6040516101ce9190611024565b60405180910390f35b6101df6106e2565b6040516101ec919061104e565b60405180910390f35b6101fd61070b565b60405161020a919061108a565b60405180910390f35b61022d60048036038101906102289190610d7c565b61072f565b60405161023a9190610d61565b60405180910390f35b61025d600480360381019061025891906110a5565b61078c565b60405161026a9190610d61565b60405180910390f35b61028d60048036038101906102889190610d7c565b6107c3565b005b6102a960048036038101906102a49190610d7c565b6108c1565b6040516102b69190611109565b60405180910390f35b6102d960048036038101906102d49190611150565b6108e1565b005b6102f560048036038101906102f09190610d7c565b610992565b005b6000610304338484610342565b905092915050565b600061033b3383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610342565b9050919050565b6000833373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806103c85750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8061046b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e985e9c582336040518363ffffffff1660e01b8152600401610429929190611190565b602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a91906111ce565b5b8061047b575061047a81610a15565b5b6104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b1906112a4565b60405180910390fd5b60006104c586610ac4565b905060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b826040516020016104ff9291906112e5565b604051602081830303815290604052805190602001209050808773ffffffffffffffffffffffffffffffffffffffff167f6ada868dd3058cf77a48a74489fd7963688e5464b2b0fa957ace976243270e9260405160405180910390a37f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635ef2c7f07f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b84898960006040518663ffffffff1660e01b81526004016105e0959493929190611360565b600060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b505050508093505050509392505050565b610627610b4c565b6106316000610bca565b565b600080610641868686610342565b90508373ffffffffffffffffffffffffffffffffffffffff16637737221382856040518363ffffffff1660e01b815260040161067e929190611421565b600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b5050505080915050949350505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b61075e83610ac4565b60405160200161076f9291906112e5565b604051602081830303815290604052805190602001209050919050565b60006107bc3333600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610633565b9050919050565b6107cb610b4c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610831906114c3565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167feae17a84d9eb83d8c8eb317f9e7d64857bc363fa51674d996c023f4340c577cf60405160405180910390a250565b60016020528060005260406000206000915054906101000a900460ff1681565b6108e9610b4c565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf87826040516109869190611109565b60405180910390a25050565b61099a610b4c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090611555565b60405180910390fd5b610a1281610bca565b50565b60008173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a7f57506040513d601f19601f82011682018060405250810190610a7c919061158a565b60015b610a8c5760009050610abf565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16149150505b919050565b600060285b6000811115610b3f576001810390507f3031323334353637383961626364656600000000000000000000000000000000600f84161a81536010830492506001810390507f3031323334353637383961626364656600000000000000000000000000000000600f84161a8153601083049250610ac9565b5060286000209050919050565b610b54610c8e565b73ffffffffffffffffffffffffffffffffffffffff16610b726106e2565b73ffffffffffffffffffffffffffffffffffffffff1614610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf90611603565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cd582610caa565b9050919050565b610ce581610cca565b8114610cf057600080fd5b50565b600081359050610d0281610cdc565b92915050565b60008060408385031215610d1f57610d1e610ca0565b5b6000610d2d85828601610cf3565b9250506020610d3e85828601610cf3565b9150509250929050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600060208284031215610d9257610d91610ca0565b5b6000610da084828501610cf3565b91505092915050565b600080600060608486031215610dc257610dc1610ca0565b5b6000610dd086828701610cf3565b9350506020610de186828701610cf3565b9250506040610df286828701610cf3565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e4f82610e06565b810181811067ffffffffffffffff82111715610e6e57610e6d610e17565b5b80604052505050565b6000610e81610c96565b9050610e8d8282610e46565b919050565b600067ffffffffffffffff821115610ead57610eac610e17565b5b610eb682610e06565b9050602081019050919050565b82818337600083830152505050565b6000610ee5610ee084610e92565b610e77565b905082815260208101848484011115610f0157610f00610e01565b5b610f0c848285610ec3565b509392505050565b600082601f830112610f2957610f28610dfc565b5b8135610f39848260208601610ed2565b91505092915050565b60008060008060808587031215610f5c57610f5b610ca0565b5b6000610f6a87828801610cf3565b9450506020610f7b87828801610cf3565b9350506040610f8c87828801610cf3565b925050606085013567ffffffffffffffff811115610fad57610fac610ca5565b5b610fb987828801610f14565b91505092959194509250565b6000819050919050565b6000610fea610fe5610fe084610caa565b610fc5565b610caa565b9050919050565b6000610ffc82610fcf565b9050919050565b600061100e82610ff1565b9050919050565b61101e81611003565b82525050565b60006020820190506110396000830184611015565b92915050565b61104881610cca565b82525050565b6000602082019050611063600083018461103f565b92915050565b600061107482610ff1565b9050919050565b61108481611069565b82525050565b600060208201905061109f600083018461107b565b92915050565b6000602082840312156110bb576110ba610ca0565b5b600082013567ffffffffffffffff8111156110d9576110d8610ca5565b5b6110e584828501610f14565b91505092915050565b60008115159050919050565b611103816110ee565b82525050565b600060208201905061111e60008301846110fa565b92915050565b61112d816110ee565b811461113857600080fd5b50565b60008135905061114a81611124565b92915050565b6000806040838503121561116757611166610ca0565b5b600061117585828601610cf3565b92505060206111868582860161113b565b9150509250929050565b60006040820190506111a5600083018561103f565b6111b2602083018461103f565b9392505050565b6000815190506111c881611124565b92915050565b6000602082840312156111e4576111e3610ca0565b5b60006111f2848285016111b9565b91505092915050565b600082825260208201905092915050565b7f526576657273655265676973747261723a2043616c6c6572206973206e6f742060008201527f6120636f6e74726f6c6c6572206f7220617574686f726973656420627920616460208201527f6472657373206f7220746865206164647265737320697473656c660000000000604082015250565b600061128e605b836111fb565b91506112998261120c565b606082019050919050565b600060208201905081810360008301526112bd81611281565b9050919050565b6000819050919050565b6112df6112da82610d48565b6112c4565b82525050565b60006112f182856112ce565b60208201915061130182846112ce565b6020820191508190509392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061134a61134561134084611311565b610fc5565b61131b565b9050919050565b61135a8161132f565b82525050565b600060a0820190506113756000830188610d52565b6113826020830187610d52565b61138f604083018661103f565b61139c606083018561103f565b6113a96080830184611351565b9695505050505050565b600081519050919050565b60005b838110156113dc5780820151818401526020810190506113c1565b60008484015250505050565b60006113f3826113b3565b6113fd81856111fb565b935061140d8185602086016113be565b61141681610e06565b840191505092915050565b60006040820190506114366000830185610d52565b818103602083015261144881846113e8565b90509392505050565b7f526576657273655265676973747261723a205265736f6c76657220616464726560008201527f7373206d757374206e6f74206265203000000000000000000000000000000000602082015250565b60006114ad6030836111fb565b91506114b882611451565b604082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061153f6026836111fb565b915061154a826114e3565b604082019050919050565b6000602082019050818103600083015261156e81611532565b9050919050565b60008151905061158481610cdc565b92915050565b6000602082840312156115a05761159f610ca0565b5b60006115ae84828501611575565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115ed6020836111fb565b91506115f8826115b7565b602082019050919050565b6000602082019050818103600083015261161c816115e0565b905091905056fea264697066735822122086a358c2623425493edcd1049ae6b20843461428da4c27212b2c5d5d9dcf715b64736f6c63430008110033";

type ReverseRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseRegistrar__factory extends ContractFactory {
  constructor(...args: ReverseRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fns: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReverseRegistrar> {
    return super.deploy(_fns, overrides || {}) as Promise<ReverseRegistrar>;
  }
  override getDeployTransaction(
    _fns: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fns, overrides || {});
  }
  override attach(address: string): ReverseRegistrar {
    return super.attach(address) as ReverseRegistrar;
  }
  override connect(signer: Signer): ReverseRegistrar__factory {
    return super.connect(signer) as ReverseRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseRegistrarInterface {
    return new utils.Interface(_abi) as ReverseRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReverseRegistrar {
    return new Contract(address, _abi, signerOrProvider) as ReverseRegistrar;
  }
}
